/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        if(l1 == null)  return l2;
        if(l2 == null)  return l1;
        ListNode l3 = (l1.val < l2.val) ? l1 : l2; // find the first node of the result linked list;
        ListNode former = l3;
        if(l3 == l1)    l1 = l1.next;
        else l2 = l2.next;
        while(l1 != null && l2 != null){
            if(l1.val < l2.val){
                former.next = l1;
                former = l1;
                l1 = l1.next;
            }else{
                former.next = l2;
                former = l2;
                l2 = l2.next;
            }
        }
        if(l1 == null && l2 != null) former.next = l2;
        else if(l1 != null && l2 == null)   former.next = l1;
        else    former.next = null;
        return l3;
    }
}
